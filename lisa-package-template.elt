;;; ___package_name___.el --- 

;; Copyright (C) ___year___ ___full_name___ <___email___>

;; Author: ___full_name___ <___email___>>
;; URL: http://github.com/___github_user_name___/___package_name___
;; Version: ___version___
;; Keywords: 
;; Prefix: ___prefix___
;; Separator: -

;;; Commentary:
;;
;; 

;;; Instructions:
;;
;; INSTALLATION
;;
;; This package is available fom Melpa, you may install it by calling
;; M-x package-install.
;;
;; Alternatively, you can download it manually, place it in your
;; `load-path' and require it with
;;
;;     (require '___package_name___)

;;; License:
;;
;; This file is NOT part of GNU Emacs.
;;
;; This program is free software; you can redistribute it and/or
;; modify it under the terms of the GNU General Public License
;; as published by the Free Software Foundation; either version 2
;; of the License, or (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.
;; 

;;; Change Log:
;; ___version___ - ___date___ - Created File.
;;; Code:

(defconst ___package_name___-version "___version___" "Version of the ___package_name___.el package.")
;; Not really necessary, but useful if you like counting how many versions you've released so far. 
(defconst ___package_name___-version-int 1 "Version of the ___package_name___.el package, as an integer.")
(defun ___prefix______sep___bug-report ()
  "Opens github issues page in a web browser. Please send any bugs you find.
Please include your emacs and ___package_name___ versions."
  (interactive)
  (message "Your ___prefix______sep___version is: %s, and your emacs version is: %s.\nPlease include this in your report!"
           ___package_name___-version emacs-version)
  (browse-url "https://github.com/___github_user_name___/___package_name___/issues/new"))
(defun ___prefix______sep___customize ()
  "Open the customization menu in the `___package_name___' group."
  (interactive)
  (customize-group '___package_name___ t))

;;;###autoload


(provide '___package_name___)
;;; ___package_name___.el ends here.
